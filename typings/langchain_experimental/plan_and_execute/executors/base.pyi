"""
This type stub file was generated by pyright.
"""

from abc import abstractmethod
from typing import Any
from langchain.callbacks.manager import Callbacks
from langchain.chains.base import Chain
from langchain_experimental.plan_and_execute.schema import StepResponse
from langchain_experimental.pydantic_v1 import BaseModel

class BaseExecutor(BaseModel):
    """Base executor."""
    @abstractmethod
    def step(self, inputs: dict, callbacks: Callbacks = ..., **kwargs: Any) -> StepResponse:
        """Take step."""
        ...
    
    @abstractmethod
    async def astep(self, inputs: dict, callbacks: Callbacks = ..., **kwargs: Any) -> StepResponse:
        """Take async step."""
        ...
    


class ChainExecutor(BaseExecutor):
    """Chain executor."""
    chain: Chain
    def step(self, inputs: dict, callbacks: Callbacks = ..., **kwargs: Any) -> StepResponse:
        """Take step."""
        ...
    
    async def astep(self, inputs: dict, callbacks: Callbacks = ..., **kwargs: Any) -> StepResponse:
        """Take step."""
        ...
    


