"""
This type stub file was generated by pyright.
"""

from typing import List, Optional
from langchain_experimental.tot.thought import Thought

class ToTDFSMemory:
    """
    Memory for the Tree of Thought (ToT) chain. Implemented as a stack of
    thoughts. This allows for a depth first search (DFS) of the ToT.
    """
    def __init__(self, stack: Optional[List[Thought]] = ...) -> None:
        ...
    
    def top(self) -> Optional[Thought]:
        "Get the top of the stack without popping it."
        ...
    
    def pop(self, n: int = ...) -> Optional[Thought]:
        "Pop the top n elements of the stack and return the last one."
        ...
    
    def top_parent(self) -> Optional[Thought]:
        "Get the parent of the top of the stack without popping it."
        ...
    
    def store(self, node: Thought) -> None:
        "Add a node on the top of the stack."
        ...
    
    @property
    def level(self) -> int:
        "Return the current level of the stack."
        ...
    
    def current_path(self) -> List[Thought]:
        "Return the thoughts path."
        ...
    


