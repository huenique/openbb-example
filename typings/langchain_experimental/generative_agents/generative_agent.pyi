"""
This type stub file was generated by pyright.
"""

from datetime import datetime
from typing import List, Optional, Tuple
from langchain.chains import LLMChain
from langchain.prompts import PromptTemplate
from langchain.schema.language_model import BaseLanguageModel
from langchain_experimental.generative_agents.memory import GenerativeAgentMemory
from langchain_experimental.pydantic_v1 import BaseModel

class GenerativeAgent(BaseModel):
    """An Agent as a character with memory and innate characteristics."""
    name: str
    age: Optional[int] = ...
    traits: str = ...
    status: str
    memory: GenerativeAgentMemory
    llm: BaseLanguageModel
    verbose: bool = ...
    summary: str = ...
    summary_refresh_seconds: int = ...
    last_refreshed: datetime = ...
    daily_summaries: List[str] = ...
    class Config:
        """Configuration for this pydantic object."""
        arbitrary_types_allowed = ...
    
    
    def chain(self, prompt: PromptTemplate) -> LLMChain:
        ...
    
    def summarize_related_memories(self, observation: str) -> str:
        """Summarize memories that are most relevant to an observation."""
        ...
    
    def generate_reaction(self, observation: str, now: Optional[datetime] = ...) -> Tuple[bool, str]:
        """React to a given observation."""
        ...
    
    def generate_dialogue_response(self, observation: str, now: Optional[datetime] = ...) -> Tuple[bool, str]:
        """React to a given observation."""
        ...
    
    def get_summary(self, force_refresh: bool = ..., now: Optional[datetime] = ...) -> str:
        """Return a descriptive summary of the agent."""
        ...
    
    def get_full_header(self, force_refresh: bool = ..., now: Optional[datetime] = ...) -> str:
        """Return a full header of the agent's status, summary, and current time."""
        ...
    


