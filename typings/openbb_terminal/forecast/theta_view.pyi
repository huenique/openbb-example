"""
This type stub file was generated by pyright.
"""

import pandas as pd
from datetime import datetime
from typing import Optional, Union
from openbb_terminal.decorators import log_start_end

"""Theta View"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def display_theta_forecast(data: Union[pd.DataFrame, pd.Series], target_column: str = ..., dataset_name: str = ..., seasonal: str = ..., seasonal_periods: int = ..., n_predict: int = ..., start_window: float = ..., forecast_horizon: int = ..., export: str = ..., sheet_name: Optional[str] = ..., residuals: bool = ..., forecast_only: bool = ..., start_date: Optional[datetime] = ..., end_date: Optional[datetime] = ..., naive: bool = ..., export_pred_raw: bool = ..., metric: str = ..., external_axes: bool = ...): # -> OpenBBFigure | None:
    """Display Theta forecast

    Parameters
    ----------
    data : Union[pd.Series, np.array]
        Data to forecast
    target_column: Optional[str]:
        Target column to forecast. Defaults to "close".
    dataset_name: str
        The name of the ticker to be predicted
    seasonal: str
        Seasonal component.  One of [N, A, M]
        Defaults to MULTIPLICATIVE.
    seasonal_periods: int
        Number of seasonal periods in a year
        If not set, inferred from frequency of the series.
    n_predict: int
        Number of days to forecast
    start_window: float
        Size of sliding window from start of timeseries and onwards
    forecast_horizon: int
        Number of days to forecast when backtesting and retraining historical
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    export: str
        Format to export data
    residuals: bool
        Whether to show residuals for the model. Defaults to False.
    forecast_only: bool
        Whether to only show dates in the forecasting range. Defaults to False.
    start_date: Optional[datetime]
        The starting date to perform analysis, data before this is trimmed. Defaults to None.
    end_date: Optional[datetime]
        The ending date to perform analysis, data after this is trimmed. Defaults to None.
    naive: bool
        Whether to show the naive baseline. This just assumes the closing price will be the same
        as the previous day's closing price. Defaults to False.
    export_pred_raw: bool
        Whether to export the raw predicted values. Defaults to False.
    metric: str
        The metric to use for backtesting. Defaults to "mape".
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

