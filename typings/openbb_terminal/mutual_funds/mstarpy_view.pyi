"""
This type stub file was generated by pyright.
"""

import mstarpy
from typing import Union
from openbb_terminal.decorators import log_start_end

logger = ...
@log_start_end(log=logger)
def display_carbon_metrics(loaded_funds: mstarpy.Funds): # -> None:
    """Display results of carbon metrics

    Parameters
    ----------
    loaded_funds: mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds
    """
    ...

@log_start_end(log=logger)
def display_exclusion_policy(loaded_funds: mstarpy.Funds): # -> None:
    """Display results of exclusion policy

    Parameters
    ----------
    loaded_funds: mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds
    """
    ...

@log_start_end(log=logger)
def display_historical(loaded_funds: mstarpy.Funds, start_date: str, end_date: str, comparison: str = ..., external_axes: bool = ...): # -> OpenBBFigure | None:
    """Display historical fund, category, index price

    Parameters
    ----------
    loaded_funds: mstarpy.funds
        class mstarpy.Funds instantiated with selected funds
    start_date: str
        start date of the period to be displayed
    end_date: str
        end date of the period to be displayed
    comparison: str
        type of comparison, can be index, category, both
    external_axes : bool, optional
        Whether to return the figure object or not, by default False

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> f = openbb.funds.load("Vanguard", "US")
    >>> openbb.funds.historical_chart(f)
    """
    ...

@log_start_end(log=logger)
def display_holdings(loaded_funds: mstarpy.Funds, holding_type: str = ...): # -> None:
    """Display results of holdings

    Parameters
    ----------
    loaded_funds: mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds
    holding_type : str
        type of holdings, can be all, equity, bond, other
    """
    ...

@log_start_end(log=logger)
def display_load(term: str = ..., country: str = ...) -> Union[mstarpy.Funds, None]:
    """instantiate mstarpy Funds class and display the funds selected

    Parameters
    ----------
    term : str
        String that will be searched for
    country: str
        Country to filter on

    Returns
    -------
    mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds
    """
    ...

@log_start_end(log=logger)
def display_search(term: str = ..., country: str = ..., limit: int = ...): # -> None:
    """Display results of searching for Mutual Funds

    Parameters
    ----------
    term : str
        String that will be searched for
    country: str
        Country to filter on
    limit: int
        Number to show
    """
    ...

@log_start_end(log=logger)
def display_sector(loaded_funds: mstarpy.Funds, asset_type: str = ..., external_axes: bool = ...): # -> OpenBBFigure | None:
    """Display fund, category, index sector breakdown

    Parameters
    ----------
    loaded_funds: mstarpy.funds
        class mstarpy.Funds instantiated with selected funds
    asset_type: str
        can be equity or fixed income
    external_axes : bool, optional
        Whether to return the figure object or not, by default False

    Returns
    -------
    fig : plotly.graph_objects.Figure
        Plotly figure object

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> f = openbb.funds.load("Vanguard", "US")
    >>> openbb.funds.sector_chart(f)
    """
    ...

