"""
This type stub file was generated by pyright.
"""

import mstarpy
import pandas as pd
from openbb_terminal.decorators import log_start_end

logger = ...
def get_historical(loaded_funds: mstarpy.Funds, start_date: str, end_date: str, comparison: str = ...) -> pd.DataFrame:
    """Get historical fund, category, index price

    Parameters
    ----------
    loaded_funds: mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds
    start_date: str
        start date of the historical data
    end_date: str
        end date of the historical data
    comparison: str
        can be index, category, both

    Returns
    -------
    pd.DataFrame
        Dataframe containing historical data

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> f = openbb.funds.load("Vanguard", "US")
    >>> openbb.funds.historical(f, "2020-01-01", "2020-12-31")
    """
    ...

@log_start_end(log=logger)
def get_sector(loaded_funds: mstarpy.Funds, asset_type: str = ...): # -> DataFrame:
    """Get fund, category, index sector breakdown

    Parameters
    ----------
    loaded_funds: mstarpy.funds
        class mstarpy.Funds instantiated with selected funds
    asset_type: str
        can be equity or fixed income

    Returns
    -------
    pd.DataFrame
        Dataframe containing sector breakdown
    """
    ...

@log_start_end(log=logger)
def load_carbon_metrics(loaded_funds: mstarpy.Funds) -> pd.DataFrame:
    """Search mstarpy for carbon metrics

    Parameters
    ----------
    loaded_funds: mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds

    Returns
    -------
    pd.DataFrame
        Dataframe containing carbon metrics

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> f = openbb.funds.load("Vanguard", "US")
    >>> openbb.funds.carbon(f)
    """
    ...

@log_start_end(log=logger)
def load_exclusion_policy(loaded_funds: mstarpy.Funds) -> pd.DataFrame:
    """Search mstarpy exclusion policy in esgData

    Parameters
    ----------
    loaded_funds: mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds

    Returns
    -------
    pd.DataFrame
        Dataframe containing exclusion policy

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> f = openbb.funds.load("Vanguard", "US")
    >>> openbb.funds.exclusion(f)
    """
    ...

@log_start_end(log=logger)
def load_funds(term: str = ..., country: str = ...) -> mstarpy.Funds:
    """Search mstarpy for matching funds

    Parameters
    ----------
    term : str
         String that will be searched for.  Can be name or isin
    country : str
        country where the funds is hosted

    Returns
    -------
    mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> f = openbb.funds.load("Vanguard", "US")
    """
    ...

@log_start_end(log=logger)
def load_holdings(loaded_funds: mstarpy.Funds, holding_type: str = ...) -> pd.DataFrame:
    """Search mstarpy for holdings

    Parameters
    ----------
    loaded_funds: mstarpy.Funds
        class mstarpy.Funds instantiated with selected funds

    holding_type : str
         type of holdings, can be all, equity, bond, other

    Returns
    -------
    pd.DataFrame
        Dataframe containing holdings

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> f = openbb.funds.load("Vanguard", "US")
    >>> openbb.funds.holdings(f)
    """
    ...

@log_start_end(log=logger)
def search_funds(term: str = ..., country: str = ..., limit=...) -> pd.DataFrame:
    """Search mstarpy for matching funds

    Parameters
    ----------
    term : str
         String that will be searched for.  Can be name or isin
    field : list
        list of field who will be displayed
    country : str
        country where the funds is hosted
    limit : int
        length of results to display

    Returns
    -------
    pd.DataFrame
        Dataframe containing matches

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> openbb.funds.search("Vanguard", "US")
    """
    ...

