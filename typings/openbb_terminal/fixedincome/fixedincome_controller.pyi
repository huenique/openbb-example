"""
This type stub file was generated by pyright.
"""

from typing import List, Optional
from openbb_terminal.decorators import log_start_end
from openbb_terminal.parent_classes import BaseController

""" Futures Controller """
__docformat__ = ...
logger = ...
class FixedIncomeController(BaseController):
    """Fixed Income Controller class"""
    CHOICES_COMMANDS = ...
    PATH = ...
    CHOICES_GENERATION = ...
    def __init__(self, queue: Optional[List[str]] = ...) -> None:
        """Constructor"""
        ...
    
    def print_help(self): # -> None:
        """Print help"""
        ...
    
    @log_start_end(log=logger)
    def call_estr(self, other_args: List[str]): # -> None:
        """Process estr command"""
        ...
    
    @log_start_end(log=logger)
    def call_sofr(self, other_args: List[str]): # -> None:
        """Process sofr command"""
        ...
    
    @log_start_end(log=logger)
    def call_sonia(self, other_args: List[str]): # -> None:
        """Process sonia command"""
        ...
    
    @log_start_end(log=logger)
    def call_ameribor(self, other_args: List[str]): # -> None:
        """Process ameribor command"""
        ...
    
    @log_start_end(log=logger)
    def call_fed(self, other_args: List[str]): # -> None:
        """Process fed command"""
        ...
    
    @log_start_end(log=logger)
    def call_iorb(self, other_args: List[str]): # -> None:
        """Process iorb command"""
        ...
    
    @log_start_end(log=logger)
    def call_projection(self, other_args: List[str]): # -> None:
        """Process projection command"""
        ...
    
    @log_start_end(log=logger)
    def call_dwpcr(self, other_args: List[str]): # -> None:
        """Process dwpcr command"""
        ...
    
    @log_start_end(log=logger)
    def call_ecb(self, other_args: List[str]): # -> None:
        """Process ecb command"""
        ...
    
    @log_start_end(log=logger)
    def call_treasury(self, other_args: List[str]): # -> None:
        """Process treasury command"""
        ...
    
    @log_start_end(log=logger)
    def call_tmc(self, other_args: List[str]): # -> None:
        """Process tmc command"""
        ...
    
    @log_start_end(log=logger)
    def call_ffrmc(self, other_args: List[str]): # -> None:
        """Process ffrmc command"""
        ...
    
    @log_start_end(log=logger)
    def call_ycrv(self, other_args: List[str]): # -> None:
        """Process ycrv command"""
        ...
    
    @log_start_end(log=logger)
    def call_ecbycrv(self, other_args: List[str]): # -> None:
        """Process ecbycrv command"""
        ...
    
    @log_start_end(log=logger)
    def call_usrates(self, other_args: List[str]): # -> None:
        """Process usrates command"""
        ...
    
    @log_start_end(log=logger)
    def call_icebofa(self, other_args: List[str]): # -> None:
        """Process icebofa command"""
        ...
    
    @log_start_end(log=logger)
    def call_moody(self, other_args: List[str]): # -> None:
        """Process moody command"""
        ...
    
    @log_start_end(log=logger)
    def call_cp(self, other_args: List[str]): # -> None:
        """Process cp command"""
        ...
    
    @log_start_end(log=logger)
    def call_spot(self, other_args: List[str]): # -> None:
        """Process spot command"""
        ...
    
    @log_start_end(log=logger)
    def call_hqm(self, other_args: List[str]): # -> None:
        """Process hqdm command"""
        ...
    
    @log_start_end(log=logger)
    def call_icespread(self, other_args: List[str]): # -> None:
        """Process icespread command"""
        ...
    
    @log_start_end(log=logger)
    def call_tbffr(self, other_args: List[str]): # -> None:
        """Process tbffr command"""
        ...
    


