"""
This type stub file was generated by pyright.
"""

from typing import List

"""Widgets Helper Library.

A library of `ipywidgets` wrappers for notebook based reports and voila dashboards.
The library includes both python code and html/css/js elements that can be found in the
`./widgets` folder.
"""
def price_card_stylesheet(): # -> str:
    """Load a default CSS stylesheet from file."""
    ...

def price_card(ticker: str, price: str, price_color: str = ...) -> str:
    """Prepare a styled HTML element of a 128 by 128 price card.

    Parameters
    ----------
    ticker : str
        Instrument ticker for the price card
    price : str
        Instrument price as a string
    price_color : str, optional
        The color of the price. Accepts "up_color", "down_color" and default "neutral_color"

    Returns
    -------
    str
        HTML code as string
    """
    ...

def html_report_stylesheet(): # -> str:
    """Load a default CSS stylesheet from file."""
    ...

def html_report(title: str = ..., stylesheet: str = ..., body: str = ...) -> str:
    """Prepare a styled HTML page element.

    Parameters
    ----------
    title : str, optional
        Contents of the title tag, by default ""
    stylesheet : str, optional
        Contents of the stylesheet tag, by default ""
    body : str, optional
        Contents of the body tag, by default ""

    Returns
    -------
    str
        HTML code as string
    """
    ...

def h(level: int, text: str) -> str:
    """Wrap text into an HTML `h` tag.

    Parameters
    ----------
    level : int
        HTML `h` level tag
    text : str
        Contents for `h` level tag

    Returns
    -------
    str
        HTML code as string
    """
    ...

def p(text: str, style: str = ...) -> str:
    """Wrap text into an HTML `p` tag.

    Parameters
    ----------
    text : str
        Contents for HTML `p` tag
    style: str
        Div style

    Returns
    -------
    str
        HTML code as string
    """
    ...

def row(elements: List) -> str:
    """HTML code elements to add in a single row

    Parameters
    ----------
    elements : List
        List of HTML code elements to add in a row

    Returns
    -------
    str
        HTML code as string
    """
    ...

def kpi(thresholds: List[float], sentences: List[str], value: float) -> str:
    """Add new key performance indicator to main page of report

    Parameters
    ----------
    thresholds : List[float]
        List of thresholds to take into account
    sentences : List[str]
        List of sentences to take into account. len(sentences) = len(thresholds)+1
    value : float
        Current value for the KPI in question

    Returns
    -------
    str
        HTML code as string
    """
    ...

def add_tab(title: str, htmlcode: str, comment_cell: bool = ..., commment_text: str = ...) -> str:
    """Add new tab section for the report. By default adds an opinion editable box at the start.

    Parameters
    ----------
    title : str
        Title associated with this tab / section
    htmlcode : str
        All HTML code contain within this section
    comment_cell : bool
        Comment cell

    Returns
    -------
    str
        HTML code as string
    """
    ...

def tab_clickable_and_save_evt() -> str:
    """Adds javascript code within HTML at the bottom that allows the interactivity with tabs.

    Parameters
    ----------
    report_name : str
        Report name for the file to be saved

    Returns
    -------
    str
        javascript code in HTML to process interactive tabs
    """
    ...

def tablinks(tabs: List[str]) -> str:
    """Adds list of tabs/sections for the reports that are able to be clicked. For every
    6 tabs we push them onto a new line.

    Parameters
    ----------
    tabs : List[str]
        List of tabs/sections for the reports.

    Returns
    -------
    str
        HTML code for interactive tabs
    """
    ...

def header(author: str, report_date: str, report_time: str, report_tz: str, title: str, plotly_js: bool = ...) -> str:
    """Creates reports header

    Parameters
    ----------
    author : str
        Name of author responsible by report
    report_date : str
        Date when report is run
    report_time : str
        Time when report is run
    report_tz : str
        Timezone associated with datetime of report being run
    title : str
        Title of the report
    plotly_js : bool
        If True, then we add plotly.js to the report

    Returns
    -------
    str
        HTML code for interactive tabs
    """
    ...

def add_external_fig(figloc: str, style: str = ...) -> str:
    """Add external figure to HTML

    Parameters
    ----------
    figloc : str
        Relative figure location
    style: str
        Div style

    Returns
    -------
    str
        HTML code for figure
    """
    ...

