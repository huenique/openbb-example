"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, List, Optional
from openbb_terminal.decorators import log_start_end
from openbb_terminal.parent_classes import BaseController

"""Reports Controller Module."""
__docformat__ = ...
logger = ...
class ReportController(BaseController):
    """Report Controller class."""
    CHOICES_COMMANDS: List[str] = ...
    PATH = ...
    REPORTS: List[str] = ...
    REPORTS = ...
    PARAMETERS_DICT: Dict[str, Any] = ...
    def __init__(self, queue: Optional[List[str]] = ...) -> None:
        """Constructor"""
        ...
    
    def update_choices(self): # -> None:
        """Update controller choices with reports available under templates folder."""
        ...
    
    def print_help(self): # -> None:
        """Print help."""
        ...
    
    @log_start_end(log=logger)
    def call_etf(self, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def call_forex(self, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def call_portfolio(self, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def call_economy(self, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def call_equity(self, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def call_crypto(self, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def call_forecast(self, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def run_report(self, report_name: str, other_args: List[str]): # -> None:
        ...
    
    @log_start_end(log=logger)
    def call_run(self, other_args: List[str]): # -> None:
        """Process run command"""
        ...
    


