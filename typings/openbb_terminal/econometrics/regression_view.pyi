"""
This type stub file was generated by pyright.
"""

import pandas as pd
import statsmodels
from typing import Optional
from openbb_terminal.decorators import log_start_end

"""Regression View"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def display_panel(Y: pd.DataFrame, X: pd.DataFrame, regression_type: str = ..., entity_effects: bool = ..., time_effects: bool = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> Any:
    """Based on the regression type, this function decides what regression to run.

    Parameters
    ----------
    data : dict
        A dictionary containing the datasets.
    regression_variables : list
        The regressions variables entered where the first variable is
        the dependent variable.
        each column/dataset combination.
    regression_type: str
        The type of regression you wish to execute. Choose from:
        OLS, POLS, RE, BOLS, FE
    entity_effects: bool
        Whether to apply Fixed Effects on entities.
    time_effects: bool
        Whether to apply Fixed Effects on time.
    export : str
        Format to export data

    Returns
    -------
    The dataset used, the dependent variable, the independent variable and
    the regression model.
    """
    ...

@log_start_end(log=logger)
def display_dwat(model: statsmodels.regression.linear_model.RegressionResultsWrapper, dependent_variable: pd.Series, plot: bool = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...): # -> OpenBBFigure | None:
    """Show Durbin-Watson autocorrelation tests

    Parameters
    ----------
    model : OLS Model
        A fit statsmodels OLS model.
    dependent_variable : pd.Series
        The dependent variable for plotting
    plot : bool
        Whether to plot the residuals
    export : str
        Format to export data
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
def display_bgod(model: statsmodels.regression.linear_model.RegressionResultsWrapper, lags: int = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Show Breusch-Godfrey autocorrelation test

    Parameters
    ----------
    model : OLS Model
        OLS model that has been fit.
    lags : int
        The amount of lags included.
    export : str
        Format to export data
    """
    ...

@log_start_end(log=logger)
def display_bpag(model: statsmodels.regression.linear_model.RegressionResultsWrapper, export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Show Breusch-Pagan heteroscedasticity test

    Parameters
    ----------
    model : OLS Model
        OLS model that has been fit.
    export : str
        Format to export data
    """
    ...

