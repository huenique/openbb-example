"""
This type stub file was generated by pyright.
"""

import logging
from typing import Any, Dict, Optional
from openbb_terminal.core.log.generation.settings import Settings

"""Logging Configuration"""
__docformat__ = ...
logger = ...
logging_verbosity = ...
def get_app_id() -> str:
    """UUID of the current installation."""
    ...

def get_session_id() -> str:
    """UUID of the current session."""
    ...

def get_commit_hash(use_env=...) -> str:
    """Get Commit Short Hash"""
    ...

def get_branch() -> str:
    ...

class PosthogHandler(logging.Handler):
    """Posthog Handler"""
    def __init__(self, settings: Settings) -> None:
        ...
    
    def emit(self, record: logging.LogRecord): # -> None:
        ...
    
    def log_to_dict(self, log_info: str) -> dict:
        """Log to dict"""
        ...
    
    def send(self, record: logging.LogRecord): # -> None:
        """Send log record to Posthog"""
        ...
    
    def extract_log_extra(self, record: logging.LogRecord) -> Dict[str, Any]:
        """Extract log extra from record"""
        ...
    


def add_posthog_handler(settings: Settings): # -> None:
    ...

def add_stdout_handler(settings: Settings): # -> None:
    ...

def add_stderr_handler(settings: Settings): # -> None:
    ...

def add_noop_handler(settings: Settings): # -> None:
    ...

def add_file_handler(settings: Settings): # -> None:
    ...

def setup_handlers(settings: Settings): # -> None:
    ...

def setup_logging(app_name: Optional[str] = ..., frequency: Optional[str] = ..., verbosity: Optional[int] = ...) -> None:
    """Setup Logging"""
    ...

