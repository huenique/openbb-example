"""
This type stub file was generated by pyright.
"""

from typing import Optional
from openbb_terminal.decorators import log_start_end

""" Finviz View """
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def display_performance_map(period: str = ..., map_filter: str = ...): # -> None:
    """Opens Finviz map website in a browser. [Source: Finviz]

    Parameters
    ----------
    period : str
        Performance period. Available periods are 1d, 1w, 1m, 3m, 6m, 1y.
    map_filter : str
        Map filter. Available map filters are sp500, world, full, etf.
    """
    ...

@log_start_end(log=logger)
def display_valuation(group: str = ..., sortby: str = ..., ascend: bool = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Display group (sectors, industry or country) valuation data. [Source: Finviz]

    Parameters
    ----------
    group : str
        Group by category. Available groups can be accessed through get_groups().
    sortby : str
        Column to sort by
    ascend : bool
        Flag to sort in ascending order
    export : str
        Export data to csv,json,xlsx or png,jpg,pdf,svg file
    """
    ...

@log_start_end(log=logger)
def display_performance(group: str = ..., sortby: str = ..., ascend: bool = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """View group (sectors, industry or country) performance data. [Source: Finviz]

    Parameters
    ----------
    group : str
        Group by category. Available groups can be accessed through get_groups().
    sortby : str
        Column to sort by
    ascend : bool
        Flag to sort in ascending order
    export : str
        Export data to csv,json,xlsx or png,jpg,pdf,svg file
    """
    ...

@log_start_end(log=logger)
def display_future(future_type: str = ..., sortby: str = ..., ascend: bool = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Display table of a particular future type. [Source: Finviz]

    Parameters
    ----------
    future_type : str
        From the following: Indices, Energy, Metals, Meats, Grains, Softs, Bonds, Currencies
    sortby : str
        Column to sort by
    ascend : bool
        Flag to sort in ascending order
    export : str
        Export data to csv,json,xlsx or png,jpg,pdf,svg file
    """
    ...

