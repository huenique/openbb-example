"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import List
from openbb_terminal.decorators import log_start_end

""" Finviz Model """
__docformat__ = ...
logger = ...
GROUPS = ...
@log_start_end(log=logger)
def get_performance_map(period: str = ..., map_filter: str = ...): # -> None:
    """Opens Finviz map website in a browser. [Source: Finviz]

    Parameters
    ----------
    period : str
        Performance period. Available periods are 1d, 1w, 1m, 3m, 6m, 1y.
    scope : str
        Map filter. Available map filters are sp500, world, full, etf.
    """
    ...

@log_start_end(log=logger)
def get_groups() -> List[str]:
    """Get group available"""
    ...

@log_start_end(log=logger)
def get_valuation_data(group: str = ..., sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get group (sectors, industry or country) valuation data. [Source: Finviz]

    Parameters
    ----------
    group : str
        Group by category. Available groups can be accessed through get_groups().
    sortby : str
        Column to sort by
    ascend : bool
        Flag to sort in ascending order

    Returns
    -------
    pd.DataFrame
        dataframe with valuation/performance data
    """
    ...

@log_start_end(log=logger)
def get_performance_data(group: str = ..., sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get group (sectors, industry or country) performance data. [Source: Finviz]

    Parameters
    ----------
    group : str
        Group by category. Available groups can be accessed through get_groups().
    sortby : str
        Column to sort by
    ascend : bool
        Flag to sort in ascending order

    Returns
    -------
    pd.DataFrame
        dataframe with performance data
    """
    ...

@log_start_end(log=logger)
def get_spectrum_data(group: str = ...): # -> None:
    """Get group (sectors, industry or country) valuation/performance data. [Source: Finviz]

    Parameters
    ----------
    group : str
        Group by category. Available groups can be accessed through get_groups().
    """
    ...

@log_start_end(log=logger)
def get_futures(future_type: str = ..., sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get futures data. [Source: Finviz]

    Parameters
    ----------
    future_type : str
        From the following: Indices, Energy, Metals, Meats, Grains, Softs, Bonds, Currencies
    sortby : str
        Column to sort by
    ascend : bool
        Flag to sort in ascending order

    Returns
    -------
    pd.Dataframe
        Indices, Energy, Metals, Meats, Grains, Softs, Bonds, Currencies
    """
    ...

