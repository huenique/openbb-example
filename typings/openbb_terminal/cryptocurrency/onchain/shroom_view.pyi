"""
This type stub file was generated by pyright.
"""

from typing import Optional, Union
from openbb_terminal import OpenBBFigure
from openbb_terminal.decorators import check_api_key, log_start_end

"""Shroom view"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def display_query(query: str, sheet_name: Optional[str] = ..., limit: int = ..., export: str = ...): # -> None:
    """Display query results from shroom
    [Source: https://sdk.flipsidecrypto.xyz/shroomdk]

    Parameters
    ----------
    query : str
        Query string
    raw : bool
        Show raw data
    limit : int
        Limit of rows
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def display_daily_transactions(export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[OpenBBFigure, None]:
    """Get daily transactions for certain symbols in ethereum blockchain
    [Source: https://sdk.flipsidecrypto.xyz/shroomdk]

    Parameters
    ----------

    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def display_dapp_stats(platform: str, raw: bool = ..., limit: int = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[OpenBBFigure, None]:
    """Get daily transactions for certain symbols in ethereum blockchain
    [Source: https://sdk.flipsidecrypto.xyz/shroomdk]

    Parameters
    ----------
    platform : str
        Platform name (e.g., uniswap-v3)
    raw : bool
        Show raw data
    limit : int
        Limit of rows
    export : str
        Export dataframe data to csv,json,xlsx file
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def display_total_value_locked(user_address: str, address_name: str, symbol: str = ..., interval: int = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[OpenBBFigure, None]:
    """
    Get total value locked for a certain address
    TVL measures the total amount of a token that is locked in a contract.
    [Source: https://sdk.flipsidecrypto.xyz/shroomdk]

    Parameters
    ----------
    user_address : str
        Address of the user (e.g., 0xa5407eae9ba41422680e2e00537571bcc53efbfd)
    address_name : str
        Name of the address (e.g., makerdao gem join usdc)
    symbol : str
        Symbol of the token
    interval : int
        Interval of months
    export : str
        Export dataframe data to csv,json,xlsx file
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

