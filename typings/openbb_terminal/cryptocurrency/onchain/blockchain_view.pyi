"""
This type stub file was generated by pyright.
"""

from typing import Optional, Union
from openbb_terminal import OpenBBFigure
from openbb_terminal.decorators import log_start_end

"""Blockchain View"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def display_btc_circulating_supply(start_date: str = ..., end_date: Optional[str] = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[OpenBBFigure, None]:
    """Returns BTC circulating supply [Source: https://api.blockchain.info/]

    Parameters
    ----------
    start_date : str
        Initial date, format YYYY-MM-DD
    end_date : Optional[str]
        Final date, format YYYY-MM-DD
    export : str
        Export dataframe data to csv,json,xlsx file
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
def display_btc_confirmed_transactions(start_date: str = ..., end_date: Optional[str] = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[OpenBBFigure, None]:
    """Returns BTC confirmed transactions [Source: https://api.blockchain.info/]

    Parameters
    ----------
    start_date : str
        Initial date, format YYYY-MM-DD
    end_date : Optional[str]
        Final date, format YYYY-MM-DD
    export : str
        Export dataframe data to csv,json,xlsx file
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
def display_btc_single_block(blockhash: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Returns BTC block data. [Source: https://api.blockchain.info/]
    Parameters
    ----------
    blockhash : str
        Hash of the block you are looking for.
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

