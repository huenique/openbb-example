"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import List
from openbb_terminal.decorators import check_api_key, log_start_end

"""Shroom model"""
logger = ...
TTL_MINUTES = ...
PAGE_SIZE = ...
PAGE_NUMBER = ...
def create_query(query: str): # -> Any | Literal['']:
    ...

def get_query_results(token): # -> Any | Literal['']:
    ...

DAPP_STATS_PLATFORM_CHOICES = ...
def get_shroom_data(sql: str): # -> Any | Literal['']:
    """Get shroom data"""
    ...

@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def get_query_data(sql: str) -> pd.DataFrame:
    """Get query data

    Parameters
    ----------
    sql : str
        SQL query

    Returns
    -------
    pd.DataFrame
        DataFrame with query data
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def get_dapp_stats(platform: str = ...) -> pd.DataFrame:
    """Get dapp stats

    Parameters
    ----------
    platform: str
        platform to get stats for

    Returns
    -------
    pd.DataFrame
        dapp stats
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def get_daily_transactions(symbols: List[str]) -> pd.DataFrame:
    """Get daily transactions for certain symbols in ethereum blockchain
    [Source: https://sdk.flipsidecrypto.xyz/shroomdk]

    Parameters
    ----------
    symbols : List[str]
        List of symbols to get transactions for

    Returns
    -------
    pd.DataFrame
        DataFrame with transactions for each symbol
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_SHROOM_KEY"])
def get_total_value_locked(user_address: str, address_name: str, symbol: str = ..., interval: int = ...) -> pd.DataFrame:
    """
    Get total value locked for a user/name address and symbol
    TVL measures the total amount of a token that is locked in a contract.
    [Source: https://sdk.flipsidecrypto.xyz/shroomdk]

    Parameters
    ----------
    user_address : str
        User address
    address_name : str
        Name of the address
    symbol : str
        Symbol of the token
    interval : int
        Interval in months

    Returns
    -------
    pd.DataFrame
        DataFrame with total value locked
    """
    ...

