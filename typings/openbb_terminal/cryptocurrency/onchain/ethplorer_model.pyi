"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import Any, Optional
from openbb_terminal.decorators import log_start_end

"""Ethplorer model"""
__docformat__ = ...
logger = ...
PRICES_FILTERS = ...
TOP_FILTERS = ...
TH_FILTERS = ...
BALANCE_FILTERS = ...
HIST_FILTERS = ...
HOLDERS_FILTERS = ...
@log_start_end(log=logger)
def split_cols_with_dot(column: str) -> str:
    """Split column name in data frame columns whenever there is a dot between 2 words.
    E.g. price.availableSupply -> priceAvailableSupply.

    Parameters
    ----------
    column: str
        Pandas dataframe column value

    Returns
    -------
    str
        Value of column with replaced format.
    """
    ...

@log_start_end(log=logger)
def enrich_social_media(dct: dict) -> None:
    """Searching inside dictionary if there are any information about twitter, reddit or coingecko.
    If yes it updates dictionary with url to given social media site.

    Parameters
    ----------
    dct: dict
        Dictionary in which we search for coingecko, twitter or reddit url.
    """
    ...

@log_start_end(log=logger)
def make_request(endpoint: str, address: Optional[str] = ..., **kwargs: Any) -> Optional[dict]:
    """Helper method that handles request for Ethplorer API [Source: https://ethplorer.io/]

    Parameters
    ----------
    endpoint: str
        endpoint we want to query e.g. https://api.ethplorer.io/<endpoint><arg>?=apiKey=freekey
    address: str
        balance argument for given endpoint. In most cases it's tx hash, or eth balance.
    kwargs: Any
        Additional keywords arguments e.g. limit of transactions

    Returns
    -------
    Optional[dict]
        dictionary with response data
    """
    ...

@log_start_end(log=logger)
def get_token_decimals(address: str) -> Optional[int]:
    """Helper methods that gets token decimals number. [Source: Ethplorer]

    Parameters
    ----------
    address: str
        Blockchain balance e.g. 0x1f9840a85d5af5bf1d1762f925bdaddc4201f984

    Returns
    -------
    Optional[int]
        Number of decimals for given token.
    """
    ...

@log_start_end(log=logger)
def get_address_info(address: str, sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get info about tokens on you ethereum blockchain balance. Eth balance, balance of all tokens which
    have name and symbol. [Source: Ethplorer]

    Parameters
    ----------
    address: str
        Blockchain balance e.g. 0x3cD751E6b0078Be393132286c442345e5DC49699
    sortby: str
        Key to sort by.
    ascend: str
        Sort in descending order.

    Returns
    -------
    pd.DataFrame
        DataFrame with list of tokens and their balances.
    """
    ...

@log_start_end(log=logger)
def get_top_tokens(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get top 50 tokens. [Source: Ethplorer]

    Parameters
    ----------
    sortby: str
        Key to sort by.
    ascend: str
        Sort in descending order.

    Returns
    -------
    pd.DataFrame
        DataFrame with list of top 50 tokens.
    """
    ...

@log_start_end(log=logger)
def get_top_token_holders(address: str, sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get info about top token holders. [Source: Ethplorer]

    Parameters
    ----------
    address: str
        Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984
    sortby: str
        Key to sort by.
    ascend: str
        Sort in descending order.

    Returns
    -------
    pd.DataFrame
        DataFrame with list of top token holders.
    """
    ...

@log_start_end(log=logger)
def get_address_history(address: str, sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get information about balance historical transactions. [Source: Ethplorer]

    Parameters
    ----------
    address: str
        Blockchain balance e.g. 0x3cD751E6b0078Be393132286c442345e5DC49699
    sortby: str
        Key to sort by.
    ascend: str
        Sort in ascending order.

    Returns
    -------
    pd.DataFrame
        DataFrame with balance historical transactions (last 100)
    """
    ...

@log_start_end(log=logger)
def get_token_info(address) -> pd.DataFrame:
    """Get info about ERC20 token. [Source: Ethplorer]

    Parameters
    ----------
    address: str
        Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984

    Returns
    -------
    pd.DataFrame
        DataFrame with information about provided ERC20 token.
    """
    ...

@log_start_end(log=logger)
def get_tx_info(tx_hash: str) -> pd.DataFrame:
    """Get info about transaction. [Source: Ethplorer]

    Parameters
    ----------
    tx_hash: str
        Transaction hash e.g. 0x9dc7b43ad4288c624fdd236b2ecb9f2b81c93e706b2ffd1d19b112c1df7849e6

    Returns
    -------
    pd.DataFrame
        DataFrame with information about ERC20 token transaction.
    """
    ...

@log_start_end(log=logger)
def get_token_history(address: str, sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get info about token historical transactions. [Source: Ethplorer]

    Parameters
    ----------
    address: str
        Token e.g. 0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8
    sortby: str
        Key to sort by.
    ascend: str
        Sort in descending order.

    Returns
    -------
    pd.DataFrame
        DataFrame with token historical transactions.
    """
    ...

@log_start_end(log=logger)
def get_token_historical_price(address: str, sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get token historical prices with volume and market cap, and average price. [Source: Ethplorer]

    Parameters
    ----------
    address: str
        Token e.g. 0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8
    sortby: str
        Key to sort by.
    ascend: str
        Sort in descending order.

    Returns
    -------
    pd.DataFrame
        DataFrame with token historical prices.
    """
    ...

