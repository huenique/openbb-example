"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import List, Union
from openbb_terminal.decorators import log_start_end

"""CoinGecko model"""
__docformat__ = ...
logger = ...
HOLD_COINS = ...
NEWS_FILTERS = ...
CATEGORIES_FILTERS = ...
STABLES_FILTERS = ...
PRODUCTS_FILTERS = ...
PLATFORMS_FILTERS = ...
EXCHANGES_FILTERS = ...
EXRATES_FILTERS = ...
INDEXES_FILTERS = ...
DERIVATIVES_FILTERS = ...
COINS_COLUMNS = ...
@log_start_end(log=logger)
def get_holdings_overview(endpoint: str = ...) -> List[Union[str, pd.DataFrame]]:
    """Returns public companies that holds ethereum or bitcoin [Source: CoinGecko]

    Parameters
    ----------
    endpoint : str
        "bitcoin" or "ethereum"

    Returns
    -------
    List[Union[str, pd.DataFrame]]
        - str:              Overall statistics
        - pd.DataFrame: Companies holding crypto
    """
    ...

SORT_VALUES = ...
def lambda_coin_formatter(n): # -> LiteralString:
    ...

@log_start_end(log=logger)
def get_top_crypto_categories(sort_filter: str = ...) -> pd.DataFrame:
    """Returns top crypto categories [Source: CoinGecko]

    Parameters
    ----------
    sort_filter : str
        Can be one of - "market_cap_desc", "market_cap_asc", "name_desc", "name_asc",
        "market_cap_change_24h_desc", "market_cap_change_24h_asc"

    Returns
    -------
    pd.DataFrame
        Rank, Name, Change_1h, Change_7d, Market_Cap, Volume_24h,Coins, Url
    """
    ...

@log_start_end(log=logger)
def get_stable_coins(limit: int = ..., sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Returns top stable coins [Source: CoinGecko]

    Parameters
    ----------
    limit: int
        How many rows to show
    sortby: str
        Key by which to sort data, default is Market_Cap_[$]
    ascend: bool
        Flag to sort data ascending

    Returns
    -------
    pd.DataFrame
        Dataframe with stable coins data

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> openbb.crypto.ov.stables(sortby="Volume_[$]", ascend=True, limit=10)
    """
    ...

@log_start_end(log=logger)
def get_exchanges(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get list of top exchanges from CoinGecko API [Source: CoinGecko]

    Parameters
    ----------
    sortby: str
        Key by which to sort data
    ascend: bool
        Flag to sort data descending

    Returns
    -------
    pd.DataFrame
        Trust_Score, Id, Name, Country, Year_Established, Trade_Volume_24h_BTC, Url
    """
    ...

@log_start_end(log=logger)
def get_financial_platforms(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get list of financial platforms from CoinGecko API [Source: CoinGecko]

    Parameters
    ----------
    sortby: str
        Key by which to sort data
    ascend: bool
        Flag to sort data ascending

    Returns
    -------
    pd.DataFrame
        Rank, Name, Category, Centralized, Url
    """
    ...

@log_start_end(log=logger)
def get_finance_products(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get list of financial products from CoinGecko API

    Parameters
    ----------
    sortby: str
        Key by which to sort data
    ascend: bool
        Flag to sort data ascending

    Returns
    -------
    pd.DataFrame
        Rank,  Platform, Identifier, Supply_Rate, Borrow_Rate
    """
    ...

@log_start_end(log=logger)
def get_indexes(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get list of crypto indexes from CoinGecko API [Source: CoinGecko]

    Parameters
    ----------
    sortby: str
        Key by which to sort data
    ascend: bool
        Flag to sort data ascending

    Returns
    -------
    pd.DataFrame
        Name, Id, Market, Last, MultiAsset
    """
    ...

@log_start_end(log=logger)
def get_derivatives(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get list of crypto derivatives from CoinGecko API [Source: CoinGecko]

    Parameters
    ----------
    sortby: str
        Key by which to sort data
    ascend: bool
        Flag to sort data descending

    Returns
    -------
    pd.DataFrame
        Rank, Market, Symbol, Price, Pct_Change_24h, Contract_Type, Basis, Spread,
        Funding_Rate, Volume_24h,
    """
    ...

@log_start_end(log=logger)
def get_exchange_rates(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get list of crypto, fiats, commodity exchange rates from CoinGecko API [Source: CoinGecko]

    Parameters
    ----------
    sortby: str
        Key by which to sort data
    ascend: bool
        Flag to sort data ascending

    Returns
    -------
    pd.DataFrame
        Index, Name, Unit, Value, Type
    """
    ...

@log_start_end(log=logger)
def get_global_info() -> pd.DataFrame:
    """Get global statistics about crypto from CoinGecko API like:
        - market cap change
        - number of markets
        - icos
        - number of active crypto

    [Source: CoinGecko]

    Returns
    -------
    pd.DataFrame
        Metric, Value
    """
    ...

@log_start_end(log=logger)
def get_global_markets_info() -> pd.DataFrame:
    """Get global statistics about crypto markets from CoinGecko API like:
        Market_Cap, Volume, Market_Cap_Percentage

    [Source: CoinGecko]

    Returns
    -------
    pd.DataFrame
        Market_Cap, Volume, Market_Cap_Percentage
    """
    ...

@log_start_end(log=logger)
def get_global_defi_info() -> pd.DataFrame:
    """Get global statistics about Decentralized Finances [Source: CoinGecko]

    Returns
    -------
    pd.DataFrame
        Metric, Value
    """
    ...

