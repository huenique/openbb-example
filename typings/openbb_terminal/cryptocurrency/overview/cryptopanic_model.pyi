"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import Any, Optional
from openbb_terminal.decorators import check_api_key, log_start_end

"""Cryptopanic model"""
__docformat__ = ...
logger = ...
CATEGORIES = ...
SORT_FILTERS = ...
FILTERS = ...
REGIONS = ...
class ApiKeyException(Exception):
    """Api Key Exception object"""
    @log_start_end(log=logger)
    def __init__(self, message: str) -> None:
        ...
    
    @log_start_end(log=logger)
    def __str__(self) -> str:
        ...
    


@log_start_end(log=logger)
@check_api_key(["API_CRYPTO_PANIC_KEY"])
def make_request(**kwargs: Any) -> Optional[dict]:
    """Helper methods for requests [Source: https://cryptopanic.com/developers/api/]

    Parameters
    ----------
    kwargs: Any
        Keyword arguments with parameters for GET request to cryptopanic api.

    Returns
    -------
    Optional[dict]
        response from api request
    """
    ...

@log_start_end(log=logger)
def get_news(limit: int = ..., post_kind: str = ..., filter_: Optional[str] = ..., region: str = ..., source: Optional[str] = ..., symbol: Optional[str] = ..., sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get recent posts from CryptoPanic news aggregator platform. [Source: https://cryptopanic.com/]

    Parameters
    ----------
    limit: int
        number of news to fetch
    post_kind: str
        Filter by category of news. Available values: news or media.
    filter_: Optional[str]
        Filter by kind of news. One from list: rising|hot|bullish|bearish|important|saved|lol
    region: str
        Filter news by regions. Available regions are: en (English), de (Deutsch), nl (Dutch),
        es (Español), fr (Français), it (Italiano), pt (Português), ru (Русский)
    sortby: str
        Key to sort by.
    ascend: bool
        Sort in ascend order.

    Returns
    -------
    pd.DataFrame
        DataFrame with recent news from different sources filtered by provided parameters.
    """
    ...

