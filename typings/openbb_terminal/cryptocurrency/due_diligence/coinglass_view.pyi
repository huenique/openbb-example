"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import Optional, Union
from openbb_terminal import OpenBBFigure
from openbb_terminal.decorators import check_api_key, log_start_end

logger = ...
@log_start_end(log=logger)
@check_api_key(["API_COINGLASS_KEY"])
def display_funding_rate(symbol: str, export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> None:
    """Plots funding rate by exchange for a certain cryptocurrency
    [Source: https://coinglass.github.io/API-Reference/]

    Parameters
    ----------
    symbol : str
        Crypto symbol to search funding rate (e.g., BTC)
    export : str
        Export dataframe data to csv,json,xlsx file
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    external_axes : bool, optional
        Whether to return the figure object or not, by default False

    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_COINGLASS_KEY"])
def display_open_interest(symbol: str, interval: int = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> None:
    """Plots open interest by exchange for a certain cryptocurrency
    [Source: https://coinglass.github.io/API-Reference/]

    Parameters
    ----------
    symbol : str
        Crypto symbol to search open interest (e.g., BTC)
    interval : int
        Frequency (possible values are: 0 for ALL, 2 for 1H, 1 for 4H, 4 for 12H), by default 0
    export : str
        Export dataframe data to csv,json,xlsx file
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_COINGLASS_KEY"])
def display_liquidations(symbol: str, export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[None, OpenBBFigure]:
    """Plots liquidation per day data for a certain cryptocurrency
    [Source: https://coinglass.github.io/API-Reference/#liquidation-chart]

    Parameters
    ----------
    symbol : str
        Crypto symbol to search open interest (e.g., BTC)
    export : str
        Export dataframe data to csv,json,xlsx file
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
def plot_data(df: pd.DataFrame, symbol: str = ..., title: str = ..., ylabel: str = ..., external_axes: bool = ...) -> Union[None, OpenBBFigure]:
    ...

@log_start_end(log=logger)
def plot_data_bar(df: pd.DataFrame, symbol: str = ..., title: str = ..., ylabel: str = ..., external_axes: bool = ...) -> Union[None, OpenBBFigure]:
    ...

