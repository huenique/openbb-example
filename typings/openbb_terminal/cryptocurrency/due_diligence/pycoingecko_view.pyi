"""
This type stub file was generated by pyright.
"""

from typing import Optional
from openbb_terminal.decorators import log_start_end

"""CoinGecko view"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def display_coin_potential_returns(to_symbol: str, from_symbol: Optional[str] = ..., limit: Optional[int] = ..., price: Optional[int] = ..., export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing potential returns of a certain coin. [Source: CoinGecko]

    Parameters
    ----------
    to_symbol   : str
        Coin loaded to check potential returns for (e.g., algorand)
    from_symbol          : str | None
        Coin to compare main_coin with (e.g., bitcoin)
    limit         : int | None
        Number of coins with highest market cap to compare main_coin with (e.g., 5)
    price
        Target price of main_coin to check potential returns (e.g., 5)
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_info(symbol: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing basic information about loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency symbol
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_web(symbol: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing found websites corresponding to loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency symbol
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_social(symbol: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing social media corresponding to loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_dev(symbol: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing developers data for loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_ath(symbol: str, currency: str = ..., export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing all time high data for loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency
    currency: str
        currency vs which coin ath will be displayed: usd or btc
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_atl(symbol: str, currency: str = ..., export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing all time low data for loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency
    currency: str
        currency vs which coin ath will be displayed: usd or btc
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_score(symbol: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing different kind of scores for loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_bc(symbol: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing urls to blockchain explorers. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

@log_start_end(log=logger)
def display_market(symbol: str, export: str = ..., sheet_name: Optional[str] = ...) -> None:
    """Prints table showing market data for loaded coin. [Source: CoinGecko]

    Parameters
    ----------
    symbol : str
        Cryptocurrency
    export : str
        Export dataframe data to csv,json,xlsx file
    """
    ...

