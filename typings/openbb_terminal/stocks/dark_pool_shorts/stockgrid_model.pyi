"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import List, Tuple
from openbb_terminal.decorators import log_start_end

""" Stockgrid View """
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def get_dark_pool_short_positions(sortby: str = ..., ascend: bool = ...) -> pd.DataFrame:
    """Get dark pool short positions. [Source: Stockgrid]

    Parameters
    ----------
    sortby : str
        Field for which to sort by, where 'sv': Short Vol. [1M],
        'sv_pct': Short Vol. %%, 'nsv': Net Short Vol. [1M],
        'nsv_dollar': Net Short Vol. ($100M), 'dpp': DP Position [1M],
        'dpp_dollar': DP Position ($1B)
    ascend : bool
        Data in ascending order

    Returns
    -------
    pd.DataFrame
        Dark pool short position data
    """
    ...

@log_start_end(log=logger)
def get_short_interest_days_to_cover(sortby: str = ...) -> pd.DataFrame:
    """Get short interest and days to cover. [Source: Stockgrid]

    Parameters
    ----------
    sortby : str
        Field for which to sort by, where 'float': Float Short %%,
        'dtc': Days to Cover, 'si': Short Interest

    Returns
    -------
    pd.DataFrame
        Short interest and days to cover data
    """
    ...

@log_start_end(log=logger)
def get_short_interest_volume(symbol: str) -> Tuple[pd.DataFrame, List]:
    """Get price vs short interest volume. [Source: Stockgrid]

    Parameters
    ----------
    symbol : str
        Stock to get data from

    Returns
    -------
    Tuple[pd.DataFrame, List]
        Short interest volume data, Price data
    """
    ...

@log_start_end(log=logger)
def get_net_short_position(symbol: str) -> pd.DataFrame:
    """Get net short position. [Source: Stockgrid]

    Parameters
    ----------
    symbol: str
        Stock to get data from

    Returns
    -------
    pd.DataFrame
        Net short position
    """
    ...

