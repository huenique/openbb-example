"""
This type stub file was generated by pyright.
"""

import pandas as pd
import requests
from typing import Dict, List, Tuple
from openbb_terminal.decorators import log_start_end

""" FINRA Model """
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def getFINRAweeks(tier: str = ..., is_ats: bool = ...) -> List:
    """Get FINRA weeks. [Source: FINRA]

    Parameters
    ----------
    tier : str
        Stock tier between T1, T2, or OTCE
    is_ats : bool
        ATS data if true, NON-ATS otherwise

    Returns
    -------
    List
        List of response data
    """
    ...

def getFINRAdata_offset(start_date: str, tier: str = ..., symbol: str = ..., is_ats: bool = ..., offset: int = ...) -> requests.Response:
    """Get FINRA data. [Source: FINRA]

    Parameters
    ----------
    start_date: str
        Weekly data to get FINRA data, in YYYY-MM-DD format
    tier: str
        Stock tier between T1, T2, or OTCE
    symbol: str
        Stock ticker to get data from
    is_ats: bool
        ATS data if true, NON-ATS otherwise
    offset: int
        Offset in getting the data

    Returns
    -------
    requests.Response
        Response from FINRA data
    """
    ...

def getFINRAdata(start_date: str, symbol: str = ..., tier: str = ..., is_ats: bool = ...) -> Tuple[int, List]:
    """Get FINRA data. [Source: FINRA]

    Parameters
    ----------
    start_date : str
        Weekly data to get FINRA data, in YYYY-MM-DD format
    symbol : str
        Stock ticker to get data from
    tier : str
        Stock tier between T1, T2, or OTCE
    is_ats : bool
        ATS data if true, NON-ATS otherwise

    Returns
    -------
    Tuple[int, List]
        Status code from request, List of response data
    """
    ...

@log_start_end(log=logger)
def getATSdata(limit: int = ..., tier_ats: str = ...) -> Tuple[pd.DataFrame, Dict]:
    """Get all FINRA ATS data, and parse most promising tickers based on linear regression

    Parameters
    ----------
    limit: int
        Number of tickers to filter from entire ATS data based on the sum of the total weekly shares quantity
    tier_ats : int
        Tier to process data from: T1, T2 or OTCE

    Returns
    -------
    Tuple[pd.DataFrame, Dict]
        Dark Pools (ATS) Data, Tickers from Dark Pools with better regression slope
    """
    ...

@log_start_end(log=logger)
def getTickerFINRAdata(symbol: str) -> Tuple[pd.DataFrame, pd.DataFrame]:
    """Get all FINRA data associated with a ticker

    Parameters
    ----------
    symbol : str
        Stock ticker to get data from

    Returns
    -------
    Tuple[pd.DataFrame, pd.DataFrame]
        Dark Pools (ATS) Data, OTC (Non-ATS) Data
    """
    ...

