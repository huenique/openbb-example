"""
This type stub file was generated by pyright.
"""

from datetime import datetime
from typing import List, Optional
from openbb_terminal.decorators import log_start_end
from openbb_terminal.parent_classes import BaseController

"""Research Controller Module"""
__docformat__ = ...
logger = ...
class ResearchController(BaseController):
    """Research Controller class"""
    CHOICES_COMMANDS = ...
    PATH = ...
    def __init__(self, ticker: str, start: datetime, interval: str, queue: Optional[List[str]] = ...) -> None:
        """Constructor"""
        ...
    
    def print_help(self): # -> None:
        """Print help"""
        ...
    
    def custom_reset(self): # -> list[str] | list[Unknown]:
        """Class specific component of reset command"""
        ...
    
    @log_start_end(log=logger)
    def call_macroaxis(self, _): # -> None:
        """Process macroaxis command"""
        ...
    
    @log_start_end(log=logger)
    def call_yahoo(self, _): # -> None:
        """Process yahoo command"""
        ...
    
    @log_start_end(log=logger)
    def call_finviz(self, _): # -> None:
        """Process finviz command"""
        ...
    
    @log_start_end(log=logger)
    def call_bullrun(self, _): # -> None:
        """Process bullrun command"""
        ...
    
    @log_start_end(log=logger)
    def call_marketwatch(self, _): # -> None:
        """Process marketwatch command"""
        ...
    
    @log_start_end(log=logger)
    def call_fool(self, _): # -> None:
        """Process fool command"""
        ...
    
    @log_start_end(log=logger)
    def call_businessinsider(self, _): # -> None:
        """Process businessinsider command"""
        ...
    
    @log_start_end(log=logger)
    def call_fmp(self, _): # -> None:
        """Process fmp command"""
        ...
    
    @log_start_end(log=logger)
    def call_fidelity(self, _): # -> None:
        """Process fidelity command"""
        ...
    
    @log_start_end(log=logger)
    def call_tradingview(self, _): # -> None:
        """Process tradingview command"""
        ...
    
    @log_start_end(log=logger)
    def call_marketchameleon(self, _): # -> None:
        """Process marketchameleon command"""
        ...
    
    @log_start_end(log=logger)
    def call_stockrow(self, _): # -> None:
        """Process stockrow command"""
        ...
    
    @log_start_end(log=logger)
    def call_barchart(self, _): # -> None:
        """Process barchart command"""
        ...
    
    @log_start_end(log=logger)
    def call_grufity(self, _): # -> None:
        """Process grufity command"""
        ...
    
    @log_start_end(log=logger)
    def call_fintel(self, _): # -> None:
        """Process fintel command"""
        ...
    
    @log_start_end(log=logger)
    def call_zacks(self, _): # -> None:
        """Process zacks command"""
        ...
    
    @log_start_end(log=logger)
    def call_macrotrends(self, _): # -> None:
        """Process macrotrends command"""
        ...
    
    @log_start_end(log=logger)
    def call_newsfilter(self, _): # -> None:
        """Process newsfilter command"""
        ...
    
    @log_start_end(log=logger)
    def call_stockanalysis(self, _): # -> None:
        """Process stockanalysis command"""
        ...
    


