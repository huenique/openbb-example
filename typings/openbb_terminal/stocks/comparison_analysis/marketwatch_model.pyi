"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import Dict, List, Tuple
from openbb_terminal.decorators import log_start_end

""" Comparison Analysis Marketwatch Model """
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def get_financial_comparisons(symbols: List[str], data: str = ..., timeframe: str = ..., quarter: bool = ...) -> pd.DataFrame:
    """Get dataframe of income data from marketwatch.

    Parameters
    ----------
    symbols : List[str]
        List of tickers to compare. Enter tickers you want to see as shown below:
        ["TSLA", "AAPL", "NFLX", "BBY"]
    data : str
        Data to get. Can be income, balance or cashflow
    timeframe : str
        What year/quarter to look at
    quarter : bool
        Flag to use quarterly data.

    Returns
    -------
    pd.DataFrame
        Dataframe of financial statements

    Raises
    ------
    ValueError
        Timeframe not valid
    """
    ...

@log_start_end(log=logger)
def get_income_comparison(similar: List[str], timeframe: str = ..., quarter: bool = ...) -> pd.DataFrame:
    """Get income data. [Source: Marketwatch].

    Parameters
    ----------
    similar : List[str]
        List of tickers to compare.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().
    timeframe : str
        Column header to compare
    quarter : bool, optional
        Whether to use quarterly statements, by default False
    export : str, optional
        Format to export data

    Returns
    -------
    pd.DataFrame
        Dataframe of income statements
    """
    ...

@log_start_end(log=logger)
def get_balance_comparison(similar: List[str], timeframe: str = ..., quarter: bool = ...) -> pd.DataFrame:
    """Get balance data. [Source: Marketwatch].

    Parameters
    ----------
    similar : List[str]
        List of tickers to compare.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().
    timeframe : str
        Column header to compare
    quarter : bool, optional
        Whether to use quarterly statements, by default False
    export : str, optional
        Format to export data

    Returns
    -------
    pd.DataFrame
        Dataframe of balance comparisons
    """
    ...

@log_start_end(log=logger)
def get_cashflow_comparison(similar: List[str], timeframe: str = ..., quarter: bool = ...) -> pd.DataFrame:
    """Get cashflow data. [Source: Marketwatch]

    Parameters
    ----------
    similar : List[str]
        List of tickers to compare.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().
    timeframe : str
        Column header to compare
    quarter : bool, optional
        Whether to use quarterly statements, by default False
    export : str, optional
        Format to export data

    Returns
    -------
    pd.DataFrame
        Dataframe of cashflow comparisons
    """
    ...

@log_start_end(log=logger)
def prepare_df_financials(ticker: str, statement: str, quarter: bool = ...) -> pd.DataFrame:
    """Builds a DataFrame with financial statements for a given company.

    Parameters
    ----------
    ticker: str
        Company's stock ticker
    statement: str
        Financial statement to get. Can be income, balance or cashflow
    quarter: bool, optional
        Return quarterly financial statements instead of annual, by default False

    Returns
    -------
    pd.DataFrame
        A DataFrame with financial info

    Raises
    ------
    ValueError
        If statement is not income, balance or cashflow
    """
    ...

@log_start_end(log=logger)
def prepare_comparison_financials(similar: List[str], statement: str, quarter: bool = ...) -> Tuple[List[str], Dict[str, pd.DataFrame]]:
    """Builds a dictionary of DataFrame with financial statements for list of tickers

    Parameters
    ----------
    similar : List[str]
        List of similar stock tickers
    statement : str
        Financial statement to get. Can be income, balance or cashflow
    quarter : bool
        Return quarterly financial statements instead of annual, by default False

    Returns
    -------
    Tuple[List[str], Dict[str, pd.DataFrame]]
        List of index headers,
        A dictionary of DataFrame with financial info from list of similar tickers
    """
    ...

@log_start_end(log=logger)
def combine_similar_financials(datasets: Dict[str, pd.DataFrame], similar: List[str], timeframe: str, quarter: bool = ...) -> pd.DataFrame:
    """Builds a DataFrame with financial statements from a certain timeframe of a list of tickers

    Parameters
    ----------
    datasets: Dict[str, pd.DataFrame]
        A dictionary of DataFrame with financial info from list of similar tickers
    similar: List[str]
        List of similar stock tickers
    timeframe: str
        Column label, which is a timeframe
    quarter: bool
        False for yearly data, True for quarterly

    Returns
    -------
    pd.DataFrame
        A DataFrame with financial statements from a certain timeframe of a list of tickers
    """
    ...

