"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import List, Tuple
from openbb_terminal.decorators import log_start_end

""" Comparison Analysis FinBrain Model """
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def find_smallest_num_data_point(results_list: List[dict]) -> int:
    """Helper function to find the number for the smallest total number of data points
    out of all the tickers. This is necessary because if one ticker has more or less
    data points than another then it will throw an indexing error. The solution is to
    have each ticker have the same number of data points as to graph and view properly.
    We chose to set each ticker to the minimum of number data points out of all the
    tickers.

    Parameters
    ----------
    results_list : List[json]
        List of dicts storing ticker data

    Returns
    -------
    int
        Value of smallest total number of sentiment data points
    """
    ...

@log_start_end(log=logger)
def get_sentiments(symbols: List[str]) -> pd.DataFrame:
    """Gets Sentiment analysis from several symbols provided by FinBrain's API.

    Parameters
    ----------
    symbols : List[str]
        List of tickers to get sentiment.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().

    Returns
    -------
    pd.DataFrame
        Contains sentiment analysis from several tickers
    """
    ...

@log_start_end(log=logger)
def get_sentiment_correlation(similar: List[str]) -> Tuple[pd.DataFrame, pd.DataFrame]:
    """Get correlation sentiments across similar companies. [Source: FinBrain].

    Parameters
    ----------
    similar : List[str]
        Similar companies to compare income with.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().

    Returns
    -------
    Tuple[pd.DataFrame,pd.DataFrame]
        Contains sentiment analysis from several tickers
    """
    ...

