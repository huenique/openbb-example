"""
This type stub file was generated by pyright.
"""

from typing import List, Optional, Tuple, Union
from openbb_terminal import OpenBBFigure
from openbb_terminal.decorators import log_start_end

""" Comparison Analysis Yahoo Finance View """
__docformat__ = ...
logger = ...
d_candle_types = ...
@log_start_end(log=logger)
def display_historical(similar: List[str], start_date: Optional[str] = ..., end_date: Optional[str] = ..., candle_type: str = ..., normalize: bool = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[OpenBBFigure, None]:
    """Display historical stock prices. [Source: Yahoo Finance]

    Parameters
    ----------
    similar: List[str]
        List of similar tickers.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().
    start_date: Optional[str], optional
        Initial date (e.g., 2021-10-01). Defaults to 1 year back
    end_date: Optional[str], optional
        End date (e.g., 2023-01-01)
    candle_type: str, optional
        OHLCA column to use or R to use daily returns calculated from Adjusted Close, by default "a" for Adjusted Close
    normalize: bool, optional
        Boolean to normalize all stock prices using MinMax defaults True
    export: str, optional
        Format to export historical prices, by default ""
    external_axes: bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
def display_volume(similar: List[str], start_date: Optional[str] = ..., end_date: Optional[str] = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[OpenBBFigure, None]:
    """Display stock volume. [Source: Yahoo Finance]

    Parameters
    ----------
    similar : List[str]
        List of similar tickers.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().
    start_date : Optional[str], optional
        Initial date (e.g., 2021-10-01). Defaults to 1 year back
    end_date : Optional[str], optional
        End date (e.g., 2023-01-01). Defaults to today
    export : str, optional
        Format to export historical prices, by default ""
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

@log_start_end(log=logger)
def display_correlation(similar: List[str], start_date: Optional[str] = ..., end_date: Optional[str] = ..., candle_type: str = ..., display_full_matrix: bool = ..., raw: bool = ..., external_axes: bool = ..., export: str = ..., sheet_name: Optional[str] = ...) -> Union[OpenBBFigure, None]:
    """
    Correlation heatmap based on historical price comparison
    between similar companies. [Source: Yahoo Finance]

    Parameters
    ----------
    similar : List[str]
        List of similar tickers.
        Comparable companies can be accessed through
        finnhub_peers(), finviz_peers(), polygon_peers().
    start_date : Optional[str], optional
        Initial date (e.g., 2021-10-01). Defaults to 1 year back
    end_date : Optional[str], optional
        End date (e.g., 2023-01-01)
    candle_type : str, optional
        OHLCA column to use for candles or R for returns, by default "a" for Adjusted Close
    display_full_matrix : bool, optional
        Optionally display all values in the matrix, rather than masking off half, by default False
    raw: bool, optional
        Whether to display raw data
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    export : str, optional
        Format to export correlation prices, by default ""
    """
    ...

@log_start_end(log=logger)
def display_sp500_comps_tsne(symbol: str, lr: int = ..., no_plot: bool = ..., limit: int = ..., external_axes: bool = ...) -> Union[List[str], Tuple[List[str], Optional[OpenBBFigure]]]:
    """Runs TSNE on SP500 tickers (along with ticker if not in SP500).
    TSNE is a method of visualing higher dimensional data
    https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html
    Note that the TSNE numbers are meaningless and will be arbitrary if run again.

    Parameters
    ----------
    symbol: str
        Ticker to get comparisons to
    lr: int
        Learning rate for TSNE
    no_plot: bool
        Flag to hold off on plotting
    limit: int
        Number of tickers to return
    external_axes : bool, optional
        Whether to return the figure object or not, by default False

    Returns
    -------
    List[str]
        List of the 10 closest stocks due to TSNE
    """
    ...

