"""
This type stub file was generated by pyright.
"""

from typing import List, Optional
from openbb_terminal.decorators import log_start_end
from openbb_terminal.parent_classes import BaseController

""" Hedge Controller Module """
__docformat__ = ...
logger = ...
class HedgeController(BaseController):
    """Hedge Controller class"""
    CHOICES_COMMANDS = ...
    PATH = ...
    CHOICES_GENERATION = ...
    def __init__(self, ticker: str, expiration: str, queue: Optional[List[str]] = ...) -> None:
        """Constructor"""
        ...
    
    def update_runtime_choices(self): # -> None:
        """Update runtime choices"""
        ...
    
    def print_help(self): # -> None:
        """Print help"""
        ...
    
    def custom_reset(self): # -> list[str] | list[Unknown]:
        """Class specific component of reset command"""
        ...
    
    @log_start_end(log=logger)
    def call_list(self, other_args): # -> None:
        """Lists available calls and puts"""
        ...
    
    @log_start_end(log=logger)
    def call_add(self, other_args: List[str]): # -> None:
        """Process add command"""
        ...
    
    @log_start_end(log=logger)
    def call_rmv(self, other_args: List[str]): # -> None:
        """Process rmv command"""
        ...
    
    @log_start_end(log=logger)
    def call_pick(self, other_args: List[str]): # -> None:
        """Process pick command"""
        ...
    
    @log_start_end(log=logger)
    def call_sop(self, other_args): # -> None:
        """Process sop command"""
        ...
    
    @log_start_end(log=logger)
    def call_plot(self, other_args): # -> None:
        """Process plot command"""
        ...
    


