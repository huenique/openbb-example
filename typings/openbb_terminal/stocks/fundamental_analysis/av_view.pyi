"""
This type stub file was generated by pyright.
"""

from typing import Optional, Union
from openbb_terminal import OpenBBFigure
from openbb_terminal.decorators import check_api_key, log_start_end

""" Alpha Vantage View """
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_overview(symbol: str, export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Alpha Vantage stock ticker overview

    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_key(symbol: str, export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Alpha Vantage key metrics

    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_income_statement(symbol: str, limit: int = ..., quarterly: bool = ..., ratios: bool = ..., plot: Optional[list] = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Alpha Vantage income statement

    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    limit: int
        Number of past statements, by default 5
    quarterly: bool
        Flag to get quarterly instead of annual, by default False
    ratios: bool
        Shows percentage change, by default False
    plot: list
        List of row labels to plot
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    export: str
        Format to export data
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_balance_sheet(symbol: str, limit: int = ..., quarterly: bool = ..., ratios: bool = ..., plot: Optional[list] = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Alpha Vantage balance sheet statement

    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    limit: int
        Number of past statements, by default 5
    quarterly: bool
        Flag to get quarterly instead of annual, by default False
    ratios: bool
        Shows percentage change, by default False
    plot: list
        List of row labels to plot
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    export: str
        Format to export data
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_cash_flow(symbol: str, limit: int = ..., quarterly: bool = ..., ratios: bool = ..., plot: Optional[list] = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Alpha Vantage income statement

    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    limit: int
        Number of past statements, by default 5
    quarterly: bool
        Flag to get quarterly instead of annual, by default False
    ratios: bool
        Shows percentage change, by default False
    plot: list
        List of row labels to plot
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    export: str
        Format to export data
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_earnings(symbol: str, limit: int = ..., quarterly: bool = ..., export: str = ..., sheet_name: Optional[str] = ...): # -> None:
    """Alpha Vantage earnings

    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    limit:int
        Number of events to show
    quarterly: bool
        Flag to show quarterly instead of annual
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    export: str
        Format to export data
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_fraud(symbol: str, export: str = ..., sheet_name: Optional[str] = ..., help_text: bool = ..., color: bool = ..., detail: bool = ...): # -> None:
    """Fraud indicators for given ticker
    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    export : str
        Whether to export the dupont breakdown
    help_text : bool
        Whether to show help text
    color : bool
        Whether to show color in the dataframe
    detail : bool
        Whether to show the details for the mscore
    """
    ...

@log_start_end(log=logger)
@check_api_key(["API_KEY_ALPHAVANTAGE"])
def display_dupont(symbol: str, raw: bool = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[None, OpenBBFigure]:
    """Shows the extended dupont ratio

    Parameters
    ----------
    symbol : str
        Fundamental analysis ticker symbol
    raw : str
        Show raw data instead of a graph
    export : bool
        Whether to export the dupont breakdown
    external_axes : bool, optional
        Whether to return the figure object or not, by default False
    """
    ...

