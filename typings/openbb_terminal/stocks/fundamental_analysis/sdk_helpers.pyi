"""
This type stub file was generated by pyright.
"""

import pandas as pd

"""SDK Helper Functions"""
__docformat__ = ...
def get_overview(symbol: str, source: str = ...): # -> DataFrame:
    """Get overview.

    Parameters
    ----------
    symbol : str
        Symbol to get overview for
    source : str, optional
        Data source for overview, by default "YahooFinance"
        Sources: YahooFinance, AlphaVantage, FinancialModelingPrep, Finviz

    Returns
    -------
    pd.DataFrame
        Dataframe of overview

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> overview = openbb.stocks.fa.overview("AAPL", source="AlphaVantage")
    """
    ...

def get_income_statement(symbol: str, quarterly: bool = ..., ratios: bool = ..., source: str = ..., limit: int = ...) -> pd.DataFrame:
    """Get income statement.

    Parameters
    ----------
    symbol : str
        Symbol to get income statement for
    source : str, optional
        Data source for income statement, by default "YahooFinance"
        Sources: YahooFinance, AlphaVantage, FinancialModelingPrep, Polygon, EODHD
    quarterly : bool, optional
        Flag to get quarterly data
    ratios : bool, optional
       Flag to return data as a percent change.
    limit : int
        Number of statements to return (free tiers may be limited to 5 years)

    Returns
    -------
    pd.DataFrame
        Dataframe of income statement

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> income_statement = openbb.stocks.fa.income("AAPL", source="YahooFinance")

    If you have a premium AlphaVantage key, you can use the quarterly flag to get quarterly statements
    >>> quarterly_income_statement = openbb.stocks.fa.income("AAPL", source="AlphaVantage", quarterly=True)
    """
    ...

def get_balance_sheet(symbol: str, quarterly: bool = ..., ratios: bool = ..., source: str = ..., limit: int = ...) -> pd.DataFrame:
    """Get balance sheet.

    Parameters
    ----------
    symbol : str
        Symbol to get balance sheet for
    source : str, optional
        Data source for balance sheet, by default "YahooFinance"
        Sources: YahooFinance, AlphaVantage, FinancialModelingPrep, Polygon, EODHD
    quarterly : bool, optional
        Flag to get quarterly data
    ratios : bool, optional
       Flag to return data as a percent change.
    limit : int
        Number of statements to return (free tiers may be limited to 5 years)

    Returns
    -------
    pd.DataFrame
        Dataframe of balance sheet

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> balance_sheet = openbb.stocks.fa.balance("AAPL", source="YahooFinance")

    If you have a premium AlphaVantage key, you can use the quarterly flag to get quarterly statements
    >>> quarterly_income_statement = openbb.stocks.fa.balance("AAPL", source="AlphaVantage", quarterly=True)
    """
    ...

def get_cash_flow(symbol: str, quarterly: bool = ..., ratios: bool = ..., source: str = ..., limit: int = ...) -> pd.DataFrame:
    """Get Cash Flow.

    Parameters
    ----------
    symbol : str
        Symbol to get cash flow for
    source : str, optional
        Data source for cash flow, by default "YahooFinance"
        Sources: YahooFinance, AlphaVantage, FinancialModelingPrep, Polygon, EODHD
    quarterly : bool, optional
        Flag to get quarterly data
    ratios : bool, optional
       Flag to return data as a percent change.
    limit : int
        Number of statements to return (free tiers may be limited to 5 years)

    Returns
    -------
    pd.DataFrame
        Dataframe of cash flow

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> cash_flow = openbb.stocks.fa.cash("AAPL", source="YahooFinance")

    If you have a premium AlphaVantage key, you can use the quarterly flag to get quarterly statements
    >>> quarterly_income_statement = openbb.stocks.fa.cash("AAPL", source="AlphaVantage", quarterly=True)
    """
    ...

def earnings(symbol: str, source: str = ..., quarterly: bool = ...) -> pd.DataFrame:
    """Get earnings data.

    Parameters
    ----------
    symbol : str
        Stock ticker
    source : str, optional
         Source to use, by default "AlphaVantage"
         Sources: YahooFinance, AlphaVantage
    quarterly : bool, optional
        Flag to get quarterly data (AlphaVantage only), by default False.

    Returns
    -------
    pd.DataFrame
        Dataframe of earnings

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> aapl_earnings = openbb.stocks.fa.earnings("AAPL", source ="YahooFinance")

    To obtain quarterly earnings, use the quarterly flag with AlphaVantage
    >>> aapl_earnings = openbb.stocks.fa.metrics("earnings", source ="AlphaVantage", quarterly=True)
    """
    ...

