"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import Optional, Tuple
from openbb_terminal.decorators import log_start_end

"""Yahoo Finance Model"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def get_info(symbol: str) -> pd.DataFrame:
    """Gets ticker symbol info

    Parameters
    ----------
    symbol: str
        Stock ticker symbol

    Returns
    -------
    pd.DataFrame
        DataFrame of yfinance information
    """
    ...

@log_start_end(log=logger)
def get_shareholders(symbol: str, holder: str = ...) -> pd.DataFrame:
    """Get shareholders from yahoo

    Parameters
    ----------
    symbol : str
        Stock ticker symbol
    holder : str
        Which holder to get table for

    Returns
    -------
    pd.DataFrame
        Major holders
    """
    ...

@log_start_end(log=logger)
def get_calendar_earnings(symbol: str) -> pd.DataFrame:
    """Get calendar earnings for ticker symbol

    Parameters
    ----------
    symbol: str
        Stock ticker symbol

    Returns
    -------
    pd.DataFrame
        Dataframe of calendar earnings
    """
    ...

@log_start_end(log=logger)
def get_dividends(symbol: str) -> pd.DataFrame:
    """Get historical dividend for ticker

    Parameters
    ----------
    symbol: str
        Ticker symbol to get dividend for

    Returns
    -------
    pd.DataFrame
        Dataframe of dividends and dates

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> openbb.fa.divs("AAPL")
    """
    ...

@log_start_end(log=logger)
def get_mktcap(symbol: str, start_date: Optional[str] = ..., end_date: Optional[str] = ...) -> Tuple[pd.DataFrame, str]:
    """Get market cap over time for ticker. [Source: Yahoo Finance]

    Parameters
    ----------
    symbol: str
        Ticker to get market cap over time
    start_date: Optional[str]
        Initial date (e.g., 2021-10-01). Defaults to 3 years back

    Returns
    -------
    pd.DataFrame
        Dataframe of estimated market cap over time
    str:
        Currency of ticker
    """
    ...

@log_start_end(log=logger)
def get_splits(symbol: str) -> pd.DataFrame:
    """Get splits and reverse splits events. [Source: Yahoo Finance]

    Parameters
    ----------
    symbol: str
        Ticker to get forward and reverse splits

    Returns
    -------
    pd.DataFrame
        Dataframe of forward and reverse splits
    """
    ...

@log_start_end(log=logger)
def get_financials(symbol: str, statement: str, ratios: bool = ...) -> pd.DataFrame:
    """Get cashflow statement for company

    Parameters
    ----------
    symbol : str
        Stock ticker symbol
    statement: str
        can be:

        - cash-flow
        - financials for Income
        - balance-sheet

    ratios: bool
        Shows percentage change

    Returns
    -------
    pd.DataFrame
        Dataframe of Financial statement
    """
    ...

@log_start_end(log=logger)
def get_earnings_history(symbol: str) -> pd.DataFrame:
    """Get earning reports

    Parameters
    ----------
    symbol: str
        Symbol to get earnings for

    Returns
    -------
    pd.DataFrame
        Dataframe of historical earnings if present
    """
    ...

@log_start_end(log=logger)
def get_currency(symbol) -> str:
    """Quick helper to get currency for financial statements"""
    ...

