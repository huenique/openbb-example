"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import Tuple
from openbb_terminal.decorators import log_start_end

"""Rolling Statistics"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def get_rolling_avg(data: pd.DataFrame, window: int = ...) -> Tuple[pd.DataFrame, pd.DataFrame]:
    """Return rolling mean and standard deviation

    Parameters
    ----------
    data: pd.DataFrame
        Dataframe of target data
    window: int
        Length of rolling window

    Returns
    -------
    Tuple[pd.DataFrame, pd.DataFrame]
        Dataframe of rolling mean,
        Dataframe of rolling standard deviation
    """
    ...

@log_start_end(log=logger)
def get_spread(data: pd.DataFrame, window: int = ...) -> Tuple[pd.DataFrame, pd.DataFrame]:
    """Standard Deviation and Variance

    Parameters
    ----------
    data: pd.DataFrame
        DataFrame of targeted data
    window: int
        Length of window

    Returns
    -------
    Tuple[pd.DataFrame, pd.DataFrame]
        Dataframe of rolling standard deviation,
        Dataframe of rolling variance
    """
    ...

@log_start_end(log=logger)
def get_quantile(data: pd.DataFrame, window: int = ..., quantile_pct: float = ...) -> Tuple[pd.DataFrame, pd.DataFrame]:
    """Overlay Median & Quantile

    Parameters
    ----------
    data: pd.DataFrame
        Dataframe of targeted data
    window : int
        Length of window
    quantile_pct: float
        Quantile to display

    Returns
    -------
    Tuple[pd.DataFrame, pd.DataFrame]
        Dataframe of rolling median prices over window,
        Dataframe of rolling quantile prices over window
    """
    ...

@log_start_end(log=logger)
def get_skew(data: pd.DataFrame, window: int = ...) -> pd.DataFrame:
    """Skewness Indicator

    Parameters
    ----------
    data: pd.DataFrame
        Dataframe of targeted data
    window : int
        Length of window

    Returns
    -------
    data_skew : pd.DataFrame
        Dataframe of rolling skew
    """
    ...

@log_start_end(log=logger)
def get_kurtosis(data: pd.DataFrame, window: int = ...) -> pd.DataFrame:
    """Kurtosis Indicator

    Parameters
    ----------
    data: pd.DataFrame
        Dataframe of targeted data
    window: int
        Length of window

    Returns
    -------
    df_kurt : pd.DataFrame
        Dataframe of rolling kurtosis
    """
    ...

