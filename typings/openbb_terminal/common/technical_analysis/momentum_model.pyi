"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import Tuple
from openbb_terminal.decorators import log_start_end

"""Momentum Technical Analysis"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def cci(data: pd.DataFrame, window: int = ..., scalar: float = ...) -> pd.DataFrame:
    """Commodity channel index

    Parameters
    ----------
    high_vals: pd.Series
        High values
    low_values: pd.Series
        Low values
    close-values: pd.Series
        Close values
    window: int
        Length of window
    scalar: float
        Scalar variable

    Returns
    -------
    pd.DataFrame
        Dataframe of technical indicator
    """
    ...

@log_start_end(log=logger)
def macd(data: pd.Series, n_fast: int = ..., n_slow: int = ..., n_signal: int = ...) -> pd.DataFrame:
    """Moving average convergence divergence

    Parameters
    ----------
    data: pd.Series
        Values for calculation
    n_fast : int
        Fast period
    n_slow : int
        Slow period
    n_signal : int
        Signal period
    Returns
    -------
    pd.DataFrame
        Dataframe of technical indicator
    """
    ...

@log_start_end(log=logger)
def rsi(data: pd.Series, window: int = ..., scalar: float = ..., drift: int = ...) -> pd.DataFrame:
    """Relative strength index

    Parameters
    ----------
    data: pd.Series
        Dataframe of prices
    window: int
        Length of window
    scalar: float
        Scalar variable
    drift: int
        Drift variable

    Returns
    -------
    pd.DataFrame
        Dataframe of technical indicator
    """
    ...

@log_start_end(log=logger)
def stoch(data: pd.DataFrame, fastkperiod: int = ..., slowdperiod: int = ..., slowkperiod: int = ...): # -> DataFrame:
    """Stochastic oscillator

    Parameters
    ----------
    data : pd.DataFrame
        Dataframe of OHLC prices
    fastkperiod : int
        Fast k period
    slowdperiod : int
        Slow d period
    slowkperiod : int
        Slow k period
    Returns
    -------
    pd.DataFrame
        Dataframe of technical indicator
    """
    ...

@log_start_end(log=logger)
def fisher(data: pd.DataFrame, window: int = ...) -> pd.DataFrame:
    """Fisher Transform

    Parameters
    ----------
    data : pd.DataFrame
        Dataframe of OHLC prices
    window: int
        Length for indicator window
    Returns
    -------
    df_ta: pd.DataFrame
        Dataframe of technical indicator
    """
    ...

@log_start_end(log=logger)
def cg(values: pd.Series, window: int) -> pd.DataFrame:
    """Center of gravity

    Parameters
    ----------
    values: pd.DataFrame
        Data to use with close being titled values
    window: int
        Length for indicator window
    Returns
    -------
    pd.DataFrame
        Dataframe of technical indicator
    """
    ...

@log_start_end(log=logger)
def clenow_momentum(values: pd.Series, window: int = ...) -> Tuple[float, float, pd.Series]:
    """Gets the Clenow Volatility Adjusted Momentum.  this is defined as the regression coefficient on log prices
    multiplied by the R^2 value of the regression

    Parameters
    ----------
    values: pd.Series
        Values to perform regression for
    window: int
        Length of lookback period

    Returns
    -------
    float:
        R2 of fit to log data
    float:
        Coefficient of linear regression
    pd.Series:
        Values for best fit line

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> df = openbb.stocks.load("AAPL")
    >>> openbb.ta.clenow(df["Close"])
    """
    ...

@log_start_end(log=logger)
def demark_seq(values: pd.Series) -> pd.DataFrame:
    """Get the integer value for demark sequential indicator

    Parameters
    ----------
    values: pd.Series
        Series of close values

    Returns
    -------
    pd.DataFrame
        Dataframe of UP and DOWN sequential indicators

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> df = openbb.stocks.load("AAPL")
    >>> openbb.ta.demark(df["Close"])
    """
    ...

