"""
This type stub file was generated by pyright.
"""

import pandas as pd
from typing import List, Optional, Union
from openbb_terminal.core.plots.plotly_ta.ta_class import OpenBBFigure
from openbb_terminal.decorators import log_start_end

"""Custom TA indicators"""
__docformat__ = ...
logger = ...
@log_start_end(log=logger)
def fibonacci_retracement(data: pd.DataFrame, limit: int = ..., start_date: Optional[Union[str, None]] = ..., end_date: Optional[Union[str, None]] = ..., symbol: str = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[None, OpenBBFigure]:
    """Plots Calculated fibonacci retracement levels

    Parameters
    ----------
    data: pd.DataFrame
        OHLC data
    limit: int
        Days to lookback
    start_date: Optional[str, None]
        User picked date for starting retracement
    end_date: Optional[str, None]
        User picked date for ending retracement
    symbol: str
        Ticker symbol
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    export: str
        Format to export data
    external_axes : bool, optional
        Whether to return the figure object or not, by default False

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> df = openbb.stocks.load(symbol="aapl")
    >>> openbb.ta.fib_chart(data=df)
    """
    ...

@log_start_end(log=logger)
def plot_multiple_indicators(data: pd.DataFrame, indicators: List[str], symbol: str = ..., params: Optional[dict] = ..., export: str = ..., sheet_name: Optional[str] = ..., external_axes: bool = ...) -> Union[None, OpenBBFigure]:
    """Plots multiple technical analysis indicators

    Parameters
    ----------
    data: pd.DataFrame
        OHLC data
    indicators: list
        List of indicators to plot
    symbol: str
        Ticker symbol
    window: List[int]
        List of lengths for moving averages
    export: str
        Format to export data
    sheet_name: str
        Optionally specify the name of the sheet the data is exported to.
    external_axes : bool, optional
        Whether to return the figure object or not, by default False

    Examples
    --------
    >>> from openbb_terminal.sdk import openbb
    >>> df = openbb.stocks.load(symbol="aapl")
    >>> openbb.ta.multi_chart(data=df, indicators=["macd", "rsi"])
    """
    ...

