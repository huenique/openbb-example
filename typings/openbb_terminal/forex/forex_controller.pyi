"""
This type stub file was generated by pyright.
"""

from typing import List, Optional
from openbb_terminal.decorators import check_api_key, log_start_end
from openbb_terminal.parent_classes import BaseController

"""Forex Controller."""
__docformat__ = ...
logger = ...
forex_data_path = ...
tickers = ...
FX_TICKERS = ...
class ForexController(BaseController):
    """Forex Controller class."""
    CHOICES_COMMANDS = ...
    CHOICES_MENUS = ...
    RESOLUTION = ...
    PATH = ...
    FILE_PATH = ...
    CHOICES_GENERATION = ...
    def __init__(self, queue: Optional[List[str]] = ...) -> None:
        """Construct Data."""
        ...
    
    def print_help(self): # -> None:
        """Print help."""
        ...
    
    def custom_reset(self): # -> list[str] | list[Unknown]:
        """Class specific component of reset command"""
        ...
    
    @log_start_end(log=logger)
    def call_load(self, other_args: List[str]): # -> None:
        """Process select command."""
        ...
    
    @log_start_end(log=logger)
    def call_candle(self, other_args: List[str]): # -> None:
        """Process candle command."""
        ...
    
    @log_start_end(log=logger)
    def call_quote(self, other_args: List[str]): # -> None:
        """Process quote command."""
        ...
    
    @log_start_end(log=logger)
    def call_fwd(self, other_args: List[str]): # -> None:
        """Process fwd command."""
        ...
    
    @log_start_end(log=logger)
    @check_api_key(["OANDA_ACCOUNT_TYPE", "OANDA_ACCOUNT", "OANDA_TOKEN"])
    def call_oanda(self, _): # -> None:
        """Enter Oanda menu."""
        ...
    
    @log_start_end(log=logger)
    def call_ta(self, _): # -> None:
        """Process ta command"""
        ...
    
    @log_start_end(log=logger)
    def call_qa(self, _): # -> None:
        """Process qa command"""
        ...
    
    @log_start_end(log=logger)
    def call_forecast(self, _): # -> None:
        """Process forecast command"""
        ...
    


