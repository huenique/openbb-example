"""
This type stub file was generated by pyright.
"""

import pandas as pd
from datetime import date
from pathlib import Path
from typing import List

"""Portfolio Helper"""
__docformat__ = ...
logger = ...
now = ...
PERIODS_DAYS = ...
DEFAULT_HOLDINGS_PATH = ...
def is_ticker(ticker: str) -> bool:
    """Determine whether a string is a valid ticker

    Parameters
    ----------
    ticker : str
        The string to be tested

    Returns
    -------
    bool
        Whether the string is a ticker
    """
    ...

def beta_word(beta: float) -> str:
    """Describe a beta

    Parameters
    ----------
    beta : float
        The beta for a portfolio

    Returns
    -------
    str
        The description of the beta
    """
    ...

def clean_name(name: str) -> str:
    """Clean a name to a ticker

    Parameters
    ----------
    name : str
        The value to be cleaned

    Returns
    -------
    str
        A cleaned value
    """
    ...

def filter_df_by_period(df: pd.DataFrame, period: str = ...) -> pd.DataFrame:
    """Filter dataframe by selected period

    Parameters
    ----------
    df: pd.DataFrame
        Dataframe to be filtered in terms of time
    period : str
        Period in which to filter dataframe.
        Possible choices are: mtd, qtd, ytd, 3m, 6m, 1y, 3y, 5y, 10y, all

    Returns
    -------
    pd.DataFrame
        A cleaned value
    """
    ...

def make_equal_length(df1: pd.DataFrame, df2: pd.DataFrame): # -> tuple[Unknown, Unknown]:
    """Filter dataframe by selected period

    Parameters
    ----------
    df1: pd.DataFrame
        The first DataFrame that needs to be compared.
    df2: pd.DataFrame
        The second DataFrame that needs to be compared.

    Returns
    -------
    df1 and df2
         Both DataFrames returned
    """
    ...

def get_region_from_country(country: str) -> str:
    """Get region from country

    Parameters
    ----------
    country: str
        The country to assign region.

    Returns
    -------
    str
        Region to which country belongs.
    """
    ...

def get_info_update_file(ticker: str, file_path: Path, writemode: str) -> List[str]:
    """Get info (Sector, Industry, Country and Region) from ticker and save information in file to access later.

    Parameters
    ----------
    ticker: str
        The ticker to get information.
    file_path: str
        The file to save information.
    writemode: str
        The mode to write into the file, 'w' or 'a'.

    Returns
    -------
    List[str]
        List with ticker information.
    """
    ...

def get_info_from_ticker(ticker: str) -> list:
    """Get info (Sector, Industry, Country and Region) from ticker.

    Parameters
    ----------
    ticker: str
        The ticker to get information.

    Returns
    -------
    List[str]
        List with ticker information.
    """
    ...

def get_start_date_from_period(period: str) -> date:
    """Get start date of a time period based on the period string.

    Parameters
    ----------
    period: str
        Period to get start date from (e.g. 10y, 3m, etc.)

    Returns
    -------
    date
        Start date of the period.
    """
    ...

